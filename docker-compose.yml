version: '2.18'

services:
  backend:
    build: ./backend
    environment:
      - DB_HOST=10.1.0.10
      - DB_PORT=5432
      - DB_USER=root
      - DB_PASSWORD=usercruddbpwdprod993
      - DB_NAME=usercrud

      - RMQ_ADDRESS=amqp://10.1.0.40:5672
      - RMQ_QUEUE=usercrud
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      usercrud:
        ipv4_address: 10.1.0.20
  
  frontend:
    build: ./frontend
    ports:
      - "2000:2000"
    networks:
      usercrud:
        ipv4_address: 10.1.0.30
  
  database:
    build: ./database
    environment:
      POSTGRES_DB: "usercrud"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "usercruddbpwdprod993"
    ports:
      - "5432:5432"
    volumes:
      - usercrud_database:/var/lib/postgresql/data
    networks:
      usercrud:
        ipv4_address: 10.1.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d usercrud"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - usercrud_rabbitmq:/var/lib/rabbitmq
    networks:
      usercrud:
        ipv4_address: 10.1.0.40
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 10s

networks:
  usercrud:
    driver: bridge

    ipam:
     config:
       - subnet: 10.1.0.0/16
         gateway: 10.1.0.1

volumes:
  usercrud_database:
    driver: local
  usercrud_rabbitmq:
    driver: local